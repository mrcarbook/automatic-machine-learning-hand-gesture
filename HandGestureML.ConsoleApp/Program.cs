// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.IO;
using System.Linq;
using Microsoft.ML;
using HandGestureML.Model;

namespace HandGestureML.ConsoleApp
{
    class Program
    {
        //Dataset to use for predictions 
        private const string DATA_FILEPATH = @"C:\Users\mradmin\AppData\Local\Temp\2\c156f0d9-3cdf-49b4-9bf1-30ca575ee45e.tsv";

        static void Main(string[] args)
        {
            string basePath=".\\Test Images";

            Console.WriteLine("Using model to make single prediction -- Comparing actual Label with predicted Label from sample data...\n\n");
            foreach (var item in Directory.EnumerateFiles(basePath))
            {
                //identify the label from filename
                var label = item.Split(new char[] { '_' }, StringSplitOptions.RemoveEmptyEntries)[0].Replace(basePath+"\\","");
                    
                ModelInput sampleData = new ModelInput() { ImageSource =  item, Label = label  };
                // Make a single prediction on the sample data and print results
                ModelOutput predictionResult = ConsumeModel.Predict(sampleData);


                Console.WriteLine($"ImageSource: {sampleData.ImageSource}");
                Console.WriteLine($"\n\nActual Label: {sampleData.Label} \nPredicted Label value {predictionResult.Prediction} \nPredicted Label scores: [{String.Join(",", predictionResult.Score)}]\n\n");
                Console.WriteLine("\n\n");
            }

            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();

        }

        // Change this code to create your own sample data
        #region CreateSingleDataSample
        // Method to load single row of dataset to try a single prediction
        private static ModelInput CreateSingleDataSample(string dataFilePath)
        {
            // Create MLContext
            MLContext mlContext = new MLContext();

            // Load dataset
            IDataView dataView = mlContext.Data.LoadFromTextFile<ModelInput>(
                                            path: dataFilePath,
                                            hasHeader: true,
                                            separatorChar: '\t',
                                            allowQuoting: true,
                                            allowSparse: false);

            // Use first line of dataset as model input
            // You can replace this with new test data (hardcoded or from end-user application)
            ModelInput sampleForPrediction = mlContext.Data.CreateEnumerable<ModelInput>(dataView, false)
                                                                        .First();
            return sampleForPrediction;
        }
        #endregion
    }
}
